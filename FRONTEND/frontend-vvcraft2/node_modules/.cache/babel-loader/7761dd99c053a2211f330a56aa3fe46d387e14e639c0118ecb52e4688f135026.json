{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PieChartVue = _resolveComponent(\"PieChartVue\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Utilisation des Disques\", -1 /* HOISTED */)), !$data.loading && $data.systemInfo.disk_usage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.systemInfo.disk_usage, (disk, diskName) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: diskName,\n      class: \"disk-chart\"\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(diskName), 1 /* TEXT */), _createVNode(_component_PieChartVue, {\n      data: $options.formatChartData(disk)\n    }, null, 8 /* PROPS */, [\"data\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Chargement des données...\")), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","loading","systemInfo","disk_usage","_hoisted_1","_Fragment","_renderList","disk","diskName","class","_toDisplayString","_createVNode","_component_PieChartVue","data","$options","formatChartData","_hoisted_2","error","_hoisted_3","_createCommentVNode"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>Utilisation des Disques</h3>\r\n    <div v-if=\"!loading && systemInfo.disk_usage\">\r\n      <div v-for=\"(disk, diskName) in systemInfo.disk_usage\" :key=\"diskName\" class=\"disk-chart\">\r\n        <h4>{{ diskName }}</h4>\r\n        <PieChartVue :data=\"formatChartData(disk)\" />\r\n      </div>\r\n    </div>\r\n    <p v-else>Chargement des données...</p>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PieChartVue from './DiskPieChart.vue';\r\n\r\nexport default {\r\n  name: 'MachineStatus',\r\n  components: {\r\n    PieChartVue,\r\n  },\r\n  data() {\r\n    return {\r\n      systemInfo: {},\r\n      loading: true,\r\n      error: '',\r\n    };\r\n  },\r\n  methods: {\r\n    formatChartData(disk) {\r\n      // Formate les données pour chaque disque\r\n      return {\r\n        labels: ['Espace Utilisé', 'Espace Libre'],\r\n        datasets: [\r\n          {\r\n            label: `Utilisation de ${disk.total.toFixed(2)} Go`,\r\n            backgroundColor: ['#FF6384', '#36A2EB'],\r\n            data: [disk.used.toFixed(2), disk.free.toFixed(2)],\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    async fetchMachineStatus() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data;\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchMachineStatus();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.machine-status {\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.disk-chart {\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh3, h4 {\r\n  color: #555;\r\n}\r\n\r\ncanvas {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAUM,c,0BATJC,mBAAA,CAAgC,YAA5B,yBAAuB,sB,CACfC,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,UAAU,CAACC,UAAU,I,cAA5CL,mBAAA,CAKM,OARVM,UAAA,I,kBAIMN,mBAAA,CAGMO,SAAA,QAPZC,WAAA,CAIsCN,KAAA,CAAAE,UAAU,CAACC,UAAU,EAJ3D,CAImBI,IAAI,EAAEC,QAAQ;yBAA3BV,mBAAA,CAGM;MAHkDD,GAAG,EAAEW,QAAQ;MAAEC,KAAK,EAAC;QAC3EV,mBAAA,CAAuB,YAAAW,gBAAA,CAAhBF,QAAQ,kBACfG,YAAA,CAA6CC,sBAAA;MAA/BC,IAAI,EAAEC,QAAA,CAAAC,eAAe,CAACR,IAAI;;qDAG5CT,mBAAA,CAAuC,KAT3CkB,UAAA,EASc,2BAAyB,IAC1BhB,KAAA,CAAAiB,KAAK,I,cAAdnB,mBAAA,CAA+B,KAVnCoB,UAAA,EAAAR,gBAAA,CAUuBV,KAAA,CAAAiB,KAAK,oBAV5BE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}