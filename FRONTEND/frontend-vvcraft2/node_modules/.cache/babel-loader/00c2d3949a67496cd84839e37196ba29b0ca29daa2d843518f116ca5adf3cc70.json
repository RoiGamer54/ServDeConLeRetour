{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"machine-status\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"État de la machine\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Chargement...\")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Système:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.system), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Nom de la machine:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.node), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Version:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.release), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Architecture:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.architecture), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Processeur:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.processor), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Nombre de CPU:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_count), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Total RAM:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.ram_total.toFixed(2)) + \" Mo\", 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"RAM utilisée:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.ram_used.toFixed(2)) + \" Mo\", 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.systemInfo.disk_usage, (disk, name) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: name\n    }, [_createElementVNode(\"strong\", null, \"Disque \" + _toDisplayString(name) + \":\", 1 /* TEXT */), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Total: \" + _toDisplayString(disk.total.toFixed(2)) + \" Mo\", 1 /* TEXT */), _createElementVNode(\"li\", null, \"Utilisé: \" + _toDisplayString(disk.used.toFixed(2)) + \" Mo\", 1 /* TEXT */), _createElementVNode(\"li\", null, \"Libre: \" + _toDisplayString(disk.free.toFixed(2)) + \" Mo\", 1 /* TEXT */), _createElementVNode(\"li\", null, \"Pourcentage utilisé: \" + _toDisplayString(disk.percent.toFixed(2)) + \"%\", 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Affichage des informations du processeur \"), _cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"Informations du Processeur\", -1 /* HOISTED */)), _createElementVNode(\"li\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Nom du processeur:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_info.name), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"Nombre de cœurs:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_info.cores), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"strong\", null, \"Fréquence actuelle:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_info.current_frequency.toFixed(2)) + \" MHz\", 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"strong\", null, \"Utilisation par cœur:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.systemInfo.cpu_info.usage_per_core, (usage, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, \" Cœur \" + _toDisplayString(index + 1) + \": \" + _toDisplayString(usage.toFixed(2)) + \"% \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"li\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"strong\", null, \"Température actuelle:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.systemInfo.cpu_info.temperature, (temp, core) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: core\n    }, _toDisplayString(core) + \": \" + _toDisplayString(temp.toFixed(2)) + \" °C \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"li\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"strong\", null, \"Température minimale:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_info.min_temp) + \" °C\", 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"strong\", null, \"Température maximale:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.systemInfo.cpu_info.max_temp) + \" °C\", 1 /* TEXT */)])])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","_hoisted_4","_createTextVNode","systemInfo","system","node","release","architecture","processor","cpu_count","ram_total","toFixed","ram_used","_Fragment","_renderList","disk_usage","disk","name","total","used","free","percent","_createCommentVNode","cpu_info","cores","current_frequency","usage_per_core","usage","index","temperature","temp","core","min_temp","max_temp"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div class=\"machine-status\">\r\n    <h2>État de la machine</h2>\r\n    <div v-if=\"loading\">Chargement...</div>\r\n    <div v-else-if=\"error\">{{ error }}</div>\r\n    <div v-else>\r\n      <ul>\r\n        <li><strong>Système:</strong> {{ systemInfo.system }}</li>\r\n        <li><strong>Nom de la machine:</strong> {{ systemInfo.node }}</li>\r\n        <li><strong>Version:</strong> {{ systemInfo.release }}</li>\r\n        <li><strong>Architecture:</strong> {{ systemInfo.architecture }}</li>\r\n        <li><strong>Processeur:</strong> {{ systemInfo.processor }}</li>\r\n        <li><strong>Nombre de CPU:</strong> {{ systemInfo.cpu_count }}</li>\r\n        <li><strong>Total RAM:</strong> {{ systemInfo.ram_total.toFixed(2) }} Mo</li>\r\n        <li><strong>RAM utilisée:</strong> {{ systemInfo.ram_used.toFixed(2) }} Mo</li>\r\n\r\n        <li v-for=\"(disk, name) in systemInfo.disk_usage\" :key=\"name\">\r\n          <strong>Disque {{ name }}:</strong>\r\n          <ul>\r\n            <li>Total: {{ disk.total.toFixed(2) }} Mo</li>\r\n            <li>Utilisé: {{ disk.used.toFixed(2) }} Mo</li>\r\n            <li>Libre: {{ disk.free.toFixed(2) }} Mo</li>\r\n            <li>Pourcentage utilisé: {{ disk.percent.toFixed(2) }}%</li>\r\n          </ul>\r\n        </li>\r\n\r\n        <!-- Affichage des informations du processeur -->\r\n        <h3>Informations du Processeur</h3>\r\n        <li><strong>Nom du processeur:</strong> {{ systemInfo.cpu_info.name }}</li>\r\n        <li><strong>Nombre de cœurs:</strong> {{ systemInfo.cpu_info.cores }}</li>\r\n        <li><strong>Fréquence actuelle:</strong> {{ systemInfo.cpu_info.current_frequency.toFixed(2) }} MHz</li>\r\n        <li><strong>Utilisation par cœur:</strong>\r\n          <ul>\r\n            <li v-for=\"(usage, index) in systemInfo.cpu_info.usage_per_core\" :key=\"index\">\r\n              Cœur {{ index + 1 }}: {{ usage.toFixed(2) }}%\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température actuelle:</strong>\r\n          <ul>\r\n            <li v-for=\"(temp, core) in systemInfo.cpu_info.temperature\" :key=\"core\">\r\n              {{ core }}: {{ temp.toFixed(2) }} °C\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température minimale:</strong> {{ systemInfo.cpu_info.min_temp }} °C</li>\r\n        <li><strong>Température maximale:</strong> {{ systemInfo.cpu_info.max_temp }} °C</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      systemInfo: {},  // Stocke les informations système\r\n      loading: true,   // État de chargement\r\n      error: null,     // État d'erreur\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMachineStatus(); // Appel unique lors du montage du composant\r\n  },\r\n  methods: {\r\n    async fetchMachineStatus() {\r\n      try {\r\n        console.log('ta mere')\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data; // Stockage des données récupérées\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.'; // Gestion des erreurs\r\n        console.error(err);\r\n      } finally {\r\n        this.loading = false; // Fin de l'état de chargement\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.machine-status {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\nh2 {\r\n  color: #333;\r\n}\r\nh3 {\r\n  color: #555;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAgDM,OAhDNC,UAgDM,G,4BA/CJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACXC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAAuC,OAH3CK,UAAA,EAGwB,eAAa,KACjBF,KAAA,CAAAG,KAAK,I,cAArBN,mBAAA,CAAwC,OAJ5CO,UAAA,EAAAC,gBAAA,CAI8BL,KAAA,CAAAG,KAAK,qB,cAC/BN,mBAAA,CA2CM,OAhDVS,UAAA,GAMMP,mBAAA,CAyCK,aAxCHA,mBAAA,CAA0D,a,0BAAtDA,mBAAA,CAAyB,gBAAjB,UAAQ,sBAP5BQ,gBAAA,CAOqC,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACC,MAAM,iB,GAClDV,mBAAA,CAAkE,a,0BAA9DA,mBAAA,CAAmC,gBAA3B,oBAAkB,sBARtCQ,gBAAA,CAQ+C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACE,IAAI,iB,GAC1DX,mBAAA,CAA2D,a,0BAAvDA,mBAAA,CAAyB,gBAAjB,UAAQ,sBAT5BQ,gBAAA,CASqC,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACG,OAAO,iB,GACnDZ,mBAAA,CAAqE,a,0BAAjEA,mBAAA,CAA8B,gBAAtB,eAAa,sBAVjCQ,gBAAA,CAU0C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACI,YAAY,iB,GAC7Db,mBAAA,CAAgE,a,0BAA5DA,mBAAA,CAA4B,gBAApB,aAAW,sBAX/BQ,gBAAA,CAWwC,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACK,SAAS,iB,GACxDd,mBAAA,CAAmE,a,0BAA/DA,mBAAA,CAA+B,gBAAvB,gBAAc,sBAZlCQ,gBAAA,CAY2C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACM,SAAS,iB,GAC3Df,mBAAA,CAA6E,a,0BAAzEA,mBAAA,CAA2B,gBAAnB,YAAU,sBAb9BQ,gBAAA,CAauC,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACO,SAAS,CAACC,OAAO,OAAM,KAAG,gB,GACxEjB,mBAAA,CAA+E,a,0BAA3EA,mBAAA,CAA8B,gBAAtB,eAAa,sBAdjCQ,gBAAA,CAc0C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACS,QAAQ,CAACD,OAAO,OAAM,KAAG,gB,sBAE1EnB,mBAAA,CAQKqB,SAAA,QAxBbC,WAAA,CAgBmCnB,KAAA,CAAAQ,UAAU,CAACY,UAAU,EAhBxD,CAgBoBC,IAAI,EAAEC,IAAI;yBAAtBzB,mBAAA,CAQK;MAR8CD,GAAG,EAAE0B;IAAI,IAC1DvB,mBAAA,CAAmC,gBAA3B,SAAO,GAAAM,gBAAA,CAAGiB,IAAI,IAAG,GAAC,iBAC1BvB,mBAAA,CAKK,aAJHA,mBAAA,CAA8C,YAA1C,SAAO,GAAAM,gBAAA,CAAGgB,IAAI,CAACE,KAAK,CAACP,OAAO,OAAM,KAAG,iBACzCjB,mBAAA,CAA+C,YAA3C,WAAS,GAAAM,gBAAA,CAAGgB,IAAI,CAACG,IAAI,CAACR,OAAO,OAAM,KAAG,iBAC1CjB,mBAAA,CAA6C,YAAzC,SAAO,GAAAM,gBAAA,CAAGgB,IAAI,CAACI,IAAI,CAACT,OAAO,OAAM,KAAG,iBACxCjB,mBAAA,CAA4D,YAAxD,uBAAqB,GAAAM,gBAAA,CAAGgB,IAAI,CAACK,OAAO,CAACV,OAAO,OAAM,GAAC,gB;kCAI3DW,mBAAA,8CAAiD,E,4BACjD5B,mBAAA,CAAmC,YAA/B,4BAA0B,sBAC9BA,mBAAA,CAA2E,a,0BAAvEA,mBAAA,CAAmC,gBAA3B,oBAAkB,sBA5BtCQ,gBAAA,CA4B+C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACN,IAAI,iB,GACnEvB,mBAAA,CAA0E,a,0BAAtEA,mBAAA,CAAiC,gBAAzB,kBAAgB,sBA7BpCQ,gBAAA,CA6B6C,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACC,KAAK,iB,GAClE9B,mBAAA,CAAwG,a,4BAApGA,mBAAA,CAAoC,gBAA5B,qBAAmB,sBA9BvCQ,gBAAA,CA8BgD,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACE,iBAAiB,CAACd,OAAO,OAAM,MAAI,gB,GACnGjB,mBAAA,CAMK,a,4BANDA,mBAAA,CAAsC,gBAA9B,uBAAqB,sBAC/BA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKqB,SAAA,QAnCjBC,WAAA,CAiCyCnB,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACG,cAAc,EAjC3E,CAiCwBC,KAAK,EAAEC,KAAK;yBAAxBpC,mBAAA,CAEK;MAF6DD,GAAG,EAAEqC;IAAK,GAAE,QACvE,GAAA5B,gBAAA,CAAG4B,KAAK,QAAO,IAAE,GAAA5B,gBAAA,CAAG2B,KAAK,CAAChB,OAAO,OAAM,IAC9C;sCAGJjB,mBAAA,CAMK,a,4BANDA,mBAAA,CAAsC,gBAA9B,uBAAqB,sBAC/BA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKqB,SAAA,QA1CjBC,WAAA,CAwCuCnB,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACM,WAAW,EAxCtE,CAwCwBC,IAAI,EAAEC,IAAI;yBAAtBvC,mBAAA,CAEK;MAFwDD,GAAG,EAAEwC;IAAI,GAAA/B,gBAAA,CACjE+B,IAAI,IAAG,IAAE,GAAA/B,gBAAA,CAAG8B,IAAI,CAACnB,OAAO,OAAM,MACnC;sCAGJjB,mBAAA,CAAqF,a,4BAAjFA,mBAAA,CAAsC,gBAA9B,uBAAqB,sBA7CzCQ,gBAAA,CA6CkD,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACS,QAAQ,IAAG,KAAG,gB,GAChFtC,mBAAA,CAAqF,a,4BAAjFA,mBAAA,CAAsC,gBAA9B,uBAAqB,sBA9CzCQ,gBAAA,CA8CkD,GAAC,GAAAF,gBAAA,CAAGL,KAAA,CAAAQ,UAAU,CAACoB,QAAQ,CAACU,QAAQ,IAAG,KAAG,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}