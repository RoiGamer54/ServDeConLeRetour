{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"machine-info\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  key: 3\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 4\n};\nconst _hoisted_8 = {\n  key: 5\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PieChartVue = _resolveComponent(\"PieChartVue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Informations de la Machine\", -1 /* HOISTED */)), !$data.loading && $data.systemInfo.cpu_info ? (_openBlock(), _createElementBlock(\"section\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"Processeur\", -1 /* HOISTED */)), _createCommentVNode(\" Informations sur le processeur \"), _createCommentVNode(\" Rest of the CPU Info \")])) : _createCommentVNode(\"v-if\", true), !$data.loading && $data.systemInfo.ram_info ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"RAM\", -1 /* HOISTED */)), _createCommentVNode(\" Informations sur la RAM \")])) : _createCommentVNode(\"v-if\", true), !$data.loading && $data.systemInfo.os_info ? (_openBlock(), _createElementBlock(\"section\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h4\", null, \"OS\", -1 /* HOISTED */)), _createCommentVNode(\" Informations sur l'OS \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Informations sur les disques \"), !$data.loading && $data.systemInfo.disk_usage ? (_openBlock(), _createElementBlock(\"section\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"Disques\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.systemInfo.disk_usage, (disk, diskName) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: diskName,\n      class: \"disk-info\"\n    }, [_createElementVNode(\"h5\", null, _toDisplayString(diskName), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Capacité totale:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(disk.total.toFixed(2)) + \" Go\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Espace utilisé:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(disk.used.toFixed(2)) + \" Go (\" + _toDisplayString(disk.percent) + \"%)\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Espace libre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(disk.free.toFixed(2)) + \" Go\", 1 /* TEXT */)]), _createCommentVNode(\" Camembert pour chaque disque \"), $options.isChartDataValid(disk) ? (_openBlock(), _createBlock(_component_PieChartVue, {\n      key: 0,\n      data: $options.formatChartData(disk)\n    }, null, 8 /* PROPS */, [\"data\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Erreur : Données du disque non valides.\"))]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $data.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Chargement des données...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","systemInfo","cpu_info","_hoisted_2","_createCommentVNode","ram_info","_hoisted_3","os_info","_hoisted_4","disk_usage","_hoisted_5","_Fragment","_renderList","disk","diskName","_toDisplayString","_createTextVNode","total","toFixed","used","percent","free","$options","isChartDataValid","_createBlock","_component_PieChartVue","data","formatChartData","_hoisted_6","_hoisted_7","error","_hoisted_8"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div class=\"machine-info\">\r\n    <h3>Informations de la Machine</h3>\r\n\r\n    <section v-if=\"!loading && systemInfo.cpu_info\">\r\n      <h4>Processeur</h4>\r\n      <!-- Informations sur le processeur -->\r\n      <!-- Rest of the CPU Info -->\r\n    </section>\r\n\r\n    <section v-if=\"!loading && systemInfo.ram_info\">\r\n      <h4>RAM</h4>\r\n      <!-- Informations sur la RAM -->\r\n    </section>\r\n\r\n    <section v-if=\"!loading && systemInfo.os_info\">\r\n      <h4>OS</h4>\r\n      <!-- Informations sur l'OS -->\r\n    </section>\r\n\r\n    <!-- Informations sur les disques -->\r\n    <section v-if=\"!loading && systemInfo.disk_usage\">\r\n      <h4>Disques</h4>\r\n      <div v-for=\"(disk, diskName) in systemInfo.disk_usage\" :key=\"diskName\" class=\"disk-info\">\r\n        <h5>{{ diskName }}</h5>\r\n        <p><strong>Capacité totale:</strong> {{ disk.total.toFixed(2) }} Go</p>\r\n        <p><strong>Espace utilisé:</strong> {{ disk.used.toFixed(2) }} Go ({{ disk.percent }}%)</p>\r\n        <p><strong>Espace libre:</strong> {{ disk.free.toFixed(2) }} Go</p>\r\n\r\n        <!-- Camembert pour chaque disque -->\r\n        <PieChartVue v-if=\"isChartDataValid(disk)\" :data=\"formatChartData(disk)\" />\r\n        <p v-else>Erreur : Données du disque non valides.</p>\r\n      </div>\r\n    </section>\r\n\r\n    <p v-if=\"loading\">Chargement des données...</p>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PieChartVue from './DiskPieChart.vue';\r\n\r\nexport default {\r\n  name: 'MachineInfo',\r\n  components: {\r\n    PieChartVue,\r\n  },\r\n  data() {\r\n    return {\r\n      systemInfo: {},\r\n      loading: true,\r\n      error: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMachineInfo();\r\n  },\r\n  methods: {\r\n    async fetchMachineInfo() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data;\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    formatChartData(disk) {\r\n      if (!disk || !disk.used || !disk.free) {\r\n        console.error('Données du disque non valides:', disk);\r\n        return { labels: [], datasets: [] };\r\n      }\r\n\r\n      return {\r\n        labels: ['Espace Utilisé', 'Espace Libre'],\r\n        datasets: [\r\n          {\r\n            label: `Utilisation de ${disk.total.toFixed(2)} Go`,\r\n            backgroundColor: ['#FF6384', '#36A2EB'],\r\n            data: [disk.used.toFixed(2), disk.free.toFixed(2)],\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    isChartDataValid(disk) {\r\n      // Vérifie que les données du disque sont valides avant de tenter de créer un camembert\r\n      return disk && disk.used !== undefined && disk.free !== undefined && disk.total !== undefined;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.machine-info {\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\n.disk-info {\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh3, h4, h5 {\r\n  color: #333;\r\n}\r\n\r\np {\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ncanvas {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAD3BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAoCM,OApCNC,UAoCM,G,0BAnCJC,mBAAA,CAAmC,YAA/B,4BAA0B,sB,CAEdC,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,UAAU,CAACC,QAAQ,I,cAA9CN,mBAAA,CAIU,WARdO,UAAA,G,0BAKML,mBAAA,CAAmB,YAAf,YAAU,sBACdM,mBAAA,oCAAuC,EACvCA,mBAAA,0BAA6B,C,KAPnCA,mBAAA,gB,CAUoBL,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,UAAU,CAACI,QAAQ,I,cAA9CT,mBAAA,CAGU,WAbdU,UAAA,G,0BAWMR,mBAAA,CAAY,YAAR,KAAG,sBACPM,mBAAA,6BAAgC,C,KAZtCA,mBAAA,gB,CAeoBL,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,UAAU,CAACM,OAAO,I,cAA7CX,mBAAA,CAGU,WAlBdY,UAAA,G,0BAgBMV,mBAAA,CAAW,YAAP,IAAE,sBACNM,mBAAA,2BAA8B,C,KAjBpCA,mBAAA,gBAoBIA,mBAAA,kCAAqC,E,CACrBL,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,UAAU,CAACQ,UAAU,I,cAAhDb,mBAAA,CAYU,WAjCdc,UAAA,G,0BAsBMZ,mBAAA,CAAgB,YAAZ,SAAO,uB,kBACXF,mBAAA,CASMe,SAAA,QAhCZC,WAAA,CAuBsCb,KAAA,CAAAE,UAAU,CAACQ,UAAU,EAvB3D,CAuBmBI,IAAI,EAAEC,QAAQ;yBAA3BlB,mBAAA,CASM;MATkDD,GAAG,EAAEmB,QAAQ;MAAEpB,KAAK,EAAC;QAC3EI,mBAAA,CAAuB,YAAAiB,gBAAA,CAAhBD,QAAQ,kBACfhB,mBAAA,CAAuE,Y,0BAApEA,mBAAA,CAAiC,gBAAzB,kBAAgB,sBAzBnCkB,gBAAA,CAyB4C,GAAC,GAAAD,gBAAA,CAAGF,IAAI,CAACI,KAAK,CAACC,OAAO,OAAM,KAAG,gB,GACnEpB,mBAAA,CAA2F,Y,0BAAxFA,mBAAA,CAAgC,gBAAxB,iBAAe,sBA1BlCkB,gBAAA,CA0B2C,GAAC,GAAAD,gBAAA,CAAGF,IAAI,CAACM,IAAI,CAACD,OAAO,OAAM,OAAK,GAAAH,gBAAA,CAAGF,IAAI,CAACO,OAAO,IAAG,IAAE,gB,GACvFtB,mBAAA,CAAmE,Y,0BAAhEA,mBAAA,CAA8B,gBAAtB,eAAa,sBA3BhCkB,gBAAA,CA2ByC,GAAC,GAAAD,gBAAA,CAAGF,IAAI,CAACQ,IAAI,CAACH,OAAO,OAAM,KAAG,gB,GAE/Dd,mBAAA,kCAAqC,EAClBkB,QAAA,CAAAC,gBAAgB,CAACV,IAAI,K,cAAxCW,YAAA,CAA2EC,sBAAA;MA9BnF9B,GAAA;MA8BoD+B,IAAI,EAAEJ,QAAA,CAAAK,eAAe,CAACd,IAAI;wDACtEjB,mBAAA,CAAqD,KA/B7DgC,UAAA,EA+BkB,yCAAuC,G;sCA/BzDxB,mBAAA,gBAmCaL,KAAA,CAAAC,OAAO,I,cAAhBJ,mBAAA,CAA+C,KAnCnDiC,UAAA,EAmCsB,2BAAyB,KAnC/CzB,mBAAA,gBAoCaL,KAAA,CAAA+B,KAAK,I,cAAdlC,mBAAA,CAA+B,KApCnCmC,UAAA,EAAAhB,gBAAA,CAoCuBhB,KAAA,CAAA+B,KAAK,oBApC5B1B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}