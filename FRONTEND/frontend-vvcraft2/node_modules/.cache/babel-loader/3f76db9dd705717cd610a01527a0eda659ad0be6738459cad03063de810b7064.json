{"ast":null,"code":"import axios from 'axios';\nimport { Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { defineComponent } from 'vue';\n\n// Enregistrement des composants Chart.js\nChartJS.register(Title, Tooltip, Legend, ArcElement);\nexport default defineComponent({\n  components: {\n    PieChart: Pie\n  },\n  data() {\n    return {\n      systemInfo: {},\n      loading: true,\n      error: null\n    };\n  },\n  computed: {\n    chartData() {\n      if (!this.systemInfo.disk_usage || Object.keys(this.systemInfo.disk_usage).length === 0) {\n        console.warn('Disk usage data is empty or undefined');\n        return {\n          labels: [],\n          datasets: []\n        }; // Retourner des données vides si non valide\n      }\n      console.log(\"labels def\");\n      const labels = Object.keys(this.systemInfo.disk_usage);\n      const usedSpace = Object.values(this.systemInfo.disk_usage).map(disk => disk.used || 0);\n      const freeSpace = Object.values(this.systemInfo.disk_usage).map(disk => disk.free || 0);\n      console.log('return');\n      return {\n        labels: labels,\n        datasets: [{\n          label: 'Utilisation des Disques (Go)',\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#8BC34A'],\n          data: [usedSpace.reduce((acc, val) => acc + val, 0), freeSpace.reduce((acc, val) => acc + val, 0)]\n        }]\n      };\n    }\n  },\n  mounted() {\n    this.fetchMachineStatus();\n  },\n  methods: {\n    async fetchMachineStatus() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\n        this.systemInfo = response.data;\n        console.log(this.systemInfo); // Inspecter la réponse ici\n      } catch (err) {\n        this.error = 'Erreur lors de la récupération des données.';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n});","map":{"version":3,"names":["axios","Pie","Chart","ChartJS","Title","Tooltip","Legend","ArcElement","defineComponent","register","components","PieChart","data","systemInfo","loading","error","computed","chartData","disk_usage","Object","keys","length","console","warn","labels","datasets","log","usedSpace","values","map","disk","used","freeSpace","free","label","backgroundColor","reduce","acc","val","mounted","fetchMachineStatus","methods","response","get","err"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div class=\"machine-status\">\r\n    <h2>État de la machine</h2>\r\n    <div v-if=\"loading\">Chargement...</div>\r\n    <div v-else-if=\"error\">{{ error }}</div>\r\n    <div v-else>\r\n      <ul>\r\n        <li><strong>Système:</strong> {{ systemInfo.system }}</li>\r\n        <li><strong>Nom de la machine:</strong> {{ systemInfo.node }}</li>\r\n        <li><strong>Version:</strong> {{ systemInfo.release }}</li>\r\n        <li><strong>Architecture:</strong> {{ systemInfo.architecture }}</li>\r\n        <li><strong>Processeur:</strong> {{ systemInfo.processor }}</li>\r\n        <li><strong>Nombre de CPU:</strong> {{ systemInfo.cpu_count }}</li>\r\n        <li><strong>Total RAM:</strong> {{ systemInfo.ram_total !== undefined ? systemInfo.ram_total.toFixed(2) : 'N/A' }} Mo</li>\r\n        <li><strong>RAM utilisée:</strong> {{ systemInfo.ram_used !== undefined ? systemInfo.ram_used.toFixed(2) : 'N/A' }} Mo</li>\r\n        \r\n        <!-- Utilisation des disques -->\r\n        <li v-for=\"(disk, name) in systemInfo.disk_usage\" :key=\"name\">\r\n          <strong>Disque {{ name }}:</strong>\r\n          <ul>\r\n            <li>Total: {{ disk.total !== undefined ? disk.total.toFixed(2) : 'N/A' }} Go</li>\r\n            <li>Utilisé: {{ disk.used !== undefined ? disk.used.toFixed(2) : 'N/A' }} Go</li>\r\n            <li>Libre: {{ disk.free !== undefined ? disk.free.toFixed(2) : 'N/A' }} Go</li>\r\n            <li>Pourcentage utilisé: {{ disk.percent !== undefined ? disk.percent.toFixed(2) : 'N/A' }}%</li>\r\n          </ul>\r\n        </li>\r\n        \r\n        <!-- Afficher le camembert -->\r\n        <h3>Utilisation des Disques</h3>\r\n        <PieChart :chartData=\"chartData\" />\r\n\r\n        <h3>Informations du Processeur</h3>\r\n        <li><strong>Nom du processeur:</strong> {{ systemInfo.cpu_info.name }}</li>\r\n        <li><strong>Nombre de cœurs:</strong> {{ systemInfo.cpu_info.cores }}</li>\r\n        <li><strong>Fréquence actuelle:</strong> {{ systemInfo.cpu_info.current_frequency !== undefined ? systemInfo.cpu_info.current_frequency.toFixed(2) : 'N/A' }} MHz</li>\r\n        <li><strong>Utilisation par cœur:</strong>\r\n          <ul>\r\n            <li v-for=\"(usage, index) in systemInfo.cpu_info.usage_per_core\" :key=\"index\">\r\n              Cœur {{ index + 1 }}: {{ usage !== undefined ? usage.toFixed(2) : 'N/A' }}%\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température actuelle:</strong>\r\n          <ul>\r\n            <li v-for=\"(temp, core) in systemInfo.cpu_info.temperature\" :key=\"core\">\r\n              {{ core }}: {{ typeof temp === 'number' ? temp.toFixed(2) : 'N/A' }} °C\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température minimale:</strong> {{ systemInfo.cpu_info.min_temp !== undefined ? systemInfo.cpu_info.min_temp.toFixed(2) : 'N/A' }} °C</li>\r\n        <li><strong>Température maximale:</strong> {{ systemInfo.cpu_info.max_temp !== undefined ? systemInfo.cpu_info.max_temp.toFixed(2) : 'N/A' }} °C</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Pie } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement } from 'chart.js';\r\nimport { defineComponent } from 'vue';\r\n\r\n// Enregistrement des composants Chart.js\r\nChartJS.register(Title, Tooltip, Legend, ArcElement);\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PieChart: Pie,\r\n  },\r\n  data() {\r\n    return {\r\n      systemInfo: {},\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    chartData() {\r\n      if (!this.systemInfo.disk_usage || Object.keys(this.systemInfo.disk_usage).length === 0) {\r\n        console.warn('Disk usage data is empty or undefined');\r\n        return { labels: [], datasets: [] }; // Retourner des données vides si non valide\r\n      }\r\n      console.log(\"labels def\")\r\n      const labels = Object.keys(this.systemInfo.disk_usage);\r\n      const usedSpace = Object.values(this.systemInfo.disk_usage).map(disk => disk.used || 0);\r\n      const freeSpace = Object.values(this.systemInfo.disk_usage).map(disk => disk.free || 0);\r\n      console.log('return')\r\n      return {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'Utilisation des Disques (Go)',\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#8BC34A'],\r\n            data: [usedSpace.reduce((acc, val) => acc + val, 0), freeSpace.reduce((acc, val) => acc + val, 0)]\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchMachineStatus();\r\n  },\r\n  methods: {\r\n    async fetchMachineStatus() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data;\r\n        console.log(this.systemInfo);  // Inspecter la réponse ici\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.';\r\n        console.error(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.machine-status {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\nh2 {\r\n  color: #333;\r\n}\r\nh3 {\r\n  color: #555;\r\n}\r\ncanvas {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":"AAyDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,aAAa;AACjC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAS,QAAS,UAAU;AAC/E,SAASC,eAAc,QAAS,KAAK;;AAErC;AACAL,OAAO,CAACM,QAAQ,CAACL,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,CAAC;AAEpD,eAAeC,eAAe,CAAC;EAC7BE,UAAU,EAAE;IACVC,QAAQ,EAAEV;EACZ,CAAC;EACDW,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACK,UAAS,IAAKC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACP,UAAU,CAACK,UAAU,CAAC,CAACG,MAAK,KAAM,CAAC,EAAE;QACvFC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;QACrD,OAAO;UAAEC,MAAM,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC,EAAE;MACvC;MACAH,OAAO,CAACI,GAAG,CAAC,YAAY;MACxB,MAAMF,MAAK,GAAIL,MAAM,CAACC,IAAI,CAAC,IAAI,CAACP,UAAU,CAACK,UAAU,CAAC;MACtD,MAAMS,SAAQ,GAAIR,MAAM,CAACS,MAAM,CAAC,IAAI,CAACf,UAAU,CAACK,UAAU,CAAC,CAACW,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAG,IAAK,CAAC,CAAC;MACvF,MAAMC,SAAQ,GAAIb,MAAM,CAACS,MAAM,CAAC,IAAI,CAACf,UAAU,CAACK,UAAU,CAAC,CAACW,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACG,IAAG,IAAK,CAAC,CAAC;MACvFX,OAAO,CAACI,GAAG,CAAC,QAAQ;MACpB,OAAO;QACLF,MAAM,EAAEA,MAAM;QACdC,QAAQ,EAAE,CACR;UACES,KAAK,EAAE,8BAA8B;UACrCC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UAC7DvB,IAAI,EAAE,CAACe,SAAS,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,GAAIC,GAAG,EAAE,CAAC,CAAC,EAAEN,SAAS,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,GAAIC,GAAG,EAAE,CAAC,CAAC;QACnG;MAEJ,CAAC;IACH;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,2CAA2C,CAAC;QAC7E,IAAI,CAAC9B,UAAS,GAAI6B,QAAQ,CAAC9B,IAAI;QAC/BU,OAAO,CAACI,GAAG,CAAC,IAAI,CAACb,UAAU,CAAC,EAAG;MACjC,EAAE,OAAO+B,GAAG,EAAE;QACZ,IAAI,CAAC7B,KAAI,GAAI,6CAA6C;QAC1DO,OAAO,CAACP,KAAK,CAAC6B,GAAG,CAAC;MACpB,UAAU;QACR,IAAI,CAAC9B,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}