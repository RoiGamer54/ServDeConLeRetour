{"ast":null,"code":"import axios from 'axios';\nimport PieChartVue from './PieChart/DiskPieChart.vue';\nimport RAMPieChart from './PieChart/RAMPieChart.vue';\nexport default {\n  name: 'MachineInfo',\n  components: {\n    PieChartVue,\n    RAMPieChart\n  },\n  data() {\n    return {\n      systemInfo: {},\n      loading: true,\n      error: '',\n      activeTab: 'cpu' // Default active tab\n    };\n  },\n  mounted() {\n    this.fetchMachineInfo();\n  },\n  methods: {\n    async fetchMachineInfo() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\n        this.systemInfo = response.data;\n      } catch (err) {\n        this.error = 'Erreur lors de la récupération des données.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatChartData(disk) {\n      const usedSpace = disk.used;\n      const freeSpace = disk.free;\n      const totalSpace = disk.total;\n\n      // Calculate percentages\n      const usedPercent = usedSpace / totalSpace * 100;\n      const freePercent = freeSpace / totalSpace * 100;\n\n      // Return data for pie chart\n      return [{\n        label: 'Utilisé',\n        value: usedPercent,\n        color: 'red'\n      }, {\n        label: 'Libre',\n        value: freePercent,\n        color: 'green'\n      }];\n    }\n  }\n};","map":{"version":3,"names":["axios","PieChartVue","RAMPieChart","name","components","data","systemInfo","loading","error","activeTab","mounted","fetchMachineInfo","methods","response","get","err","formatChartData","disk","usedSpace","used","freeSpace","free","totalSpace","total","usedPercent","freePercent","label","value","color"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div class=\"machine-info\">\r\n    <h3>Informations de la Machine</h3>\r\n\r\n    <ul class=\"tabs\">\r\n      <li class=\"tab active\" @click=\"setActiveTab('cpu')\">CPU</li>\r\n      <li class=\"tab\" @click=\"setActiveTab('os')\">OS & Disques</li>\r\n    </ul>\r\n\r\n    <div v-if=\"activeTab === 'cpu'\">\r\n      <section v-if=\"!loading && systemInfo.cpu_info\">\r\n        <h4>Processeur</h4>\r\n        <p><strong>Modèle:</strong> {{ systemInfo.cpu_info.model }}</p>\r\n        <p><strong>Nombre de cœurs physiques:</strong> {{ systemInfo.cpu_info.cores }}</p>\r\n        <p><strong>Nombre de cœurs logiques:</strong> {{ systemInfo.cpu_info.logical_cores }}</p>\r\n        <p><strong>Utilisation totale:</strong> {{ systemInfo.cpu_info.total_usage }}%</p>\r\n        <div v-for=\"(usage, index) in systemInfo.cpu_info.usage_per_core\" :key=\"index\">\r\n          <p><strong>Utilisation du cœur {{ index + 1 }}:</strong> {{ usage }}%</p>\r\n        </div>\r\n        <div v-for=\"(freq, index) in systemInfo.cpu_info.frequency_per_core\" :key=\"index\">\r\n          <p><strong>Fréquence du cœur {{ index + 1 }}:</strong> {{ freq }} MHz</p>\r\n        </div>\r\n        <p><strong>Température CPU:</strong> {{ systemInfo.cpu_info.temperature_per_core }}°C</p>\r\n      </section>\r\n    </div>\r\n\r\n    <div v-if=\"activeTab === 'os'\">\r\n      <section v-if=\"!loading && systemInfo.os_info\">\r\n        <h4>OS</h4>\r\n        <p><strong>Type:</strong> {{ systemInfo.os_info.os_type }}</p>\r\n        <p><strong>Modèle de la machine:</strong> {{ systemInfo.os_info.machine_model }}</p>\r\n        <p><strong>Nom de la machine:</strong> {{ systemInfo.os_info.node_name }}</p>\r\n        <p><strong>Temps d'activité:</strong> {{ systemInfo.os_info.uptime.toFixed(2) }} heures</p>\r\n      </section>\r\n\r\n      <section v-if=\"!loading && systemInfo.disk_usage\">\r\n        <h4>Disques</h4>\r\n        <div v-for=\"(disk, diskName) in systemInfo.disk_usage\" :key=\"diskName\" class=\"disk-info\">\r\n          <h5>{{ diskName }}</h5>\r\n          <p><strong>Capacité totale:</strong> {{ disk.total.toFixed(2) }} Go</p>\r\n          <p><strong>Espace utilisé:</strong> {{ disk.used.toFixed(2) }} Go ({{ disk.percent }}%)</p>\r\n          <p><strong>Espace libre:</strong> {{ disk.free.toFixed(2) }} Go</p>\r\n          <PieChartVue :data=\"formatChartData(disk)\" />\r\n        </div>\r\n      </section>\r\n    </div>\r\n\r\n    <p v-else>Chargement des données...</p>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PieChartVue from './PieChart/DiskPieChart.vue';\r\nimport RAMPieChart from './PieChart/RAMPieChart.vue';\r\n\r\nexport default {\r\n  name: 'MachineInfo',\r\n  components: {\r\n    PieChartVue,\r\n    RAMPieChart,\r\n  },\r\n  data() {\r\n    return {\r\n      systemInfo: {},\r\n      loading: true,\r\n      error: '',\r\n      activeTab: 'cpu', // Default active tab\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMachineInfo();\r\n  },\r\n  methods: {\r\n    async fetchMachineInfo() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data;\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\nformatChartData(disk) {\r\n  const usedSpace = disk.used;\r\n  const freeSpace = disk.free;\r\n  const totalSpace = disk.total;\r\n\r\n  // Calculate percentages\r\n  const usedPercent = (usedSpace / totalSpace) * 100;\r\n  const freePercent = (freeSpace / totalSpace) * 100;\r\n\r\n  // Return data for pie chart\r\n  return [\r\n    { label: 'Utilisé', value: usedPercent, color: 'red' },\r\n    { label: 'Libre', value: freePercent, color: 'green' },\r\n  ];\r\n}\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.machine-info {\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\n.disk-info {\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh3, h4, h5 {\r\n  color: #333;\r\n}\r\n\r\np {\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ncanvas {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,WAAU,MAAO,6BAA6B;AACrD,OAAOC,WAAU,MAAO,4BAA4B;AAEpD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVH,WAAW;IACXC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,2CAA2C,CAAC;QAC7E,IAAI,CAACR,UAAS,GAAIO,QAAQ,CAACR,IAAI;MACjC,EAAE,OAAOU,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAI,6CAA6C;MAC5D,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACLS,eAAeA,CAACC,IAAI,EAAE;MACpB,MAAMC,SAAQ,GAAID,IAAI,CAACE,IAAI;MAC3B,MAAMC,SAAQ,GAAIH,IAAI,CAACI,IAAI;MAC3B,MAAMC,UAAS,GAAIL,IAAI,CAACM,KAAK;;MAE7B;MACA,MAAMC,WAAU,GAAKN,SAAQ,GAAII,UAAU,GAAI,GAAG;MAClD,MAAMG,WAAU,GAAKL,SAAQ,GAAIE,UAAU,GAAI,GAAG;;MAElD;MACA,OAAO,CACL;QAAEI,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAEH,WAAW;QAAEI,KAAK,EAAE;MAAM,CAAC,EACtD;QAAEF,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAEF,WAAW;QAAEG,KAAK,EAAE;MAAQ,CAAC,CACvD;IACH;EACE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}