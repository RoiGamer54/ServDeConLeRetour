{"ast":null,"code":"import axios from 'axios';\nimport DiskPieChart from './DiskPieChart.vue'; // Importation du composant camembert\n\nexport default {\n  components: {\n    DiskPieChart\n  },\n  data() {\n    return {\n      systemInfo: {},\n      loading: true,\n      error: null\n    };\n  },\n  mounted() {\n    this.fetchMachineStatus();\n  },\n  methods: {\n    async fetchMachineStatus() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\n        this.systemInfo = response.data;\n        console.log(this.systemInfo); // Inspecter la réponse ici\n      } catch (err) {\n        this.error = 'Erreur lors de la récupération des données.';\n        console.error(err);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","DiskPieChart","components","data","systemInfo","loading","error","mounted","fetchMachineStatus","methods","response","get","console","log","err"],"sources":["C:\\Users\\GUERBER\\Desktop\\SERVDECON\\PROJET\\FRONTEND\\frontend-vvcraft2\\src\\components\\Serveurs\\MachineStatus.vue"],"sourcesContent":["<template>\r\n  <div class=\"machine-status\">\r\n    <h2>État de la machine</h2>\r\n    <div v-if=\"loading\">Chargement...</div>\r\n    <div v-else-if=\"error\">{{ error }}</div>\r\n    <div v-else>\r\n      <ul>\r\n        <li><strong>Système:</strong> {{ systemInfo.system }}</li>\r\n        <li><strong>Nom de la machine:</strong> {{ systemInfo.node }}</li>\r\n        <li><strong>Version:</strong> {{ systemInfo.release }}</li>\r\n        <li><strong>Architecture:</strong> {{ systemInfo.architecture }}</li>\r\n        <li><strong>Processeur:</strong> {{ systemInfo.processor }}</li>\r\n        <li><strong>Nombre de CPU:</strong> {{ systemInfo.cpu_count }}</li>\r\n        <li><strong>Total RAM:</strong> {{ systemInfo.ram_total.toFixed(2) }} Mo</li>\r\n        <li><strong>RAM utilisée:</strong> {{ systemInfo.ram_used.toFixed(2) }} Mo</li>\r\n        \r\n        <!-- Utilisation des disques -->\r\n        <li v-for=\"(disk, name) in systemInfo.disk_usage\" :key=\"name\">\r\n          <strong>Disque {{ name }}:</strong>\r\n          <ul>\r\n            <li>Total: {{ disk.total.toFixed(2) }} Go</li>\r\n            <li>Utilisé: {{ disk.used.toFixed(2) }} Go</li>\r\n            <li>Libre: {{ disk.free.toFixed(2) }} Go</li>\r\n            <li>Pourcentage utilisé: {{ disk.percent.toFixed(2) }}%</li>\r\n          </ul>\r\n        </li>\r\n        \r\n        <!-- Afficher le camembert -->\r\n\r\n        \r\n        <h3>Informations du Processeur</h3>\r\n        <li><strong>Nom du processeur:</strong> {{ systemInfo.cpu_info.name }}</li>\r\n        <li><strong>Nombre de cœurs:</strong> {{ systemInfo.cpu_info.cores }}</li>\r\n        <li><strong>Fréquence actuelle:</strong> {{ systemInfo.cpu_info.current_frequency.toFixed(2) }} MHz</li>\r\n        <li><strong>Utilisation par cœur:</strong>\r\n          <ul>\r\n            <li v-for=\"(usage, index) in systemInfo.cpu_info.usage_per_core\" :key=\"index\">\r\n              Cœur {{ index + 1 }}: {{ usage.toFixed(2) }}%\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température actuelle:</strong>\r\n          <ul>\r\n            <li v-for=\"(temp, core) in systemInfo.cpu_info.temperature\" :key=\"core\">\r\n              {{ core }}: {{ typeof temp === 'number' ? temp.toFixed(2) : 'N/A' }} °C\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li><strong>Température minimale:</strong> {{ systemInfo.cpu_info.min_temp }} °C</li>\r\n        <li><strong>Température maximale:</strong> {{ systemInfo.cpu_info.max_temp }} °C</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport DiskPieChart from './DiskPieChart.vue';  // Importation du composant camembert\r\n\r\nexport default {\r\n  components: {\r\n    DiskPieChart,\r\n  },\r\n  data() {\r\n    return {\r\n      systemInfo: {},\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMachineStatus();\r\n  },\r\n  methods: {\r\n    async fetchMachineStatus() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/machine/status/');\r\n        this.systemInfo = response.data;\r\n        console.log(this.systemInfo);  // Inspecter la réponse ici\r\n      } catch (err) {\r\n        this.error = 'Erreur lors de la récupération des données.';\r\n        console.error(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.machine-status {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\nh2 {\r\n  color: #333;\r\n}\r\nh3 {\r\n  color:\r\n  #555;\r\n}\r\ncanvas {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style>\r\n"],"mappings":"AAwDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,oBAAoB,EAAG;;AAEhD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,2CAA2C,CAAC;QAC7E,IAAI,CAACP,UAAS,GAAIM,QAAQ,CAACP,IAAI;QAC/BS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU,CAAC,EAAG;MACjC,EAAE,OAAOU,GAAG,EAAE;QACZ,IAAI,CAACR,KAAI,GAAI,6CAA6C;QAC1DM,OAAO,CAACN,KAAK,CAACQ,GAAG,CAAC;MACpB,UAAU;QACR,IAAI,CAACT,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}